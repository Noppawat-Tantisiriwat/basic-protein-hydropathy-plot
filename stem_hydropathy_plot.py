# -*- coding: utf-8 -*-
"""stem_hydropathy_plot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Uty8f_4iCgGYBwi87qYGRFzEOuVbCKyl
"""

import matplotlib.pyplot as plt
import numpy as np

amino_hydropathy ={"A":  1.800,  

"R": -4.500,  

"N": -3.500,  

"D": -3.500,  

"C":  2.500,  

"Q": -3.500,  

"E": -3.500,  

"G": -0.400,  

"H": -3.200,  

"I":  4.500,  

"L":  3.800,  

"K": -3.900,  

"M":  1.900,  

"F":  2.800,  

"P": -1.600,  

"S": -0.800,  

"T": -0.700,  

"W": -0.900,  

"Y": -1.300,  

"V":  4.200  

}

def h_score(seq_one_letter):
  plot_val = np.array([])
  for amino in seq_one_letter:
    h_val = np.array([amino_hydropathy[amino]])
    plot_val = np.append(plot_val, h_val )
  return plot_val

prion = "MANLGCWMLVLFVATWSDLGLCKKRPKPGGWNTGGSRYPGQGSPGGNRYPPQGGGGWGQPHGGGWGQPHGGGWGQPHGGGWGQPHGGGWGQGGGTHSQWNKPSKPKTNMKHMAGAAAAGAVVGGLGGYMLGSAMSRPIIHFGSDYEDRYYRENMHRYPNQVYYRPMDEYSNQNNFVHDCVNITIKQHTVTTTTKGENFTETDVKMMERVVEQMCITQYERESQAYYQRGSSMVLFSSPPVILLISFLIFLIVG"

def read_window_avg(scored, window):
  seq_size = scored.size
  margin = (window - 1) / 2
  start_midframe = margin + 1
  stop_midframe = (seq_size - margin) + 1
  read_area = np.arange(start_midframe, stop_midframe)
  windowed_score = np.array([])
  for frame in read_area:
    frame_start = int(frame - margin + 1)
    frame_stop = int(frame + margin + 1)
    frame_average = np.average(scored[frame_start:frame_stop])
    windowed_score = np.append(windowed_score,frame_average)

  return windowed_score, windowed_score.size

win_19_prion = read_window_avg(h_score(prion), 19)[0] 
plt.plot(np.arange(1,win_19_prion.size + 1),win_19_prion,np.arange(1,h_score(prion).size +1), np.arange(1,h_score(prion).size +1)*0, "r--")
plt.show()

read_window_avg(h_score(prion), 19)[1]

#stem plot v1
def stem_prot(prot, win=19):
  try:
    win_x_prot = read_window_avg(h_score(prot), win)[0]
    plt.stem(np.linspace(1,win_x_prot.size + 1, (((win_x_prot.size - win) + 1) // 5) + 1),win_x_prot[0:(win_x_prot.size - win):5])
    plt.show()
  except: ValueError
  win_x_prot = read_window_avg(h_score(prot), win)[0]
  plt.stem(np.linspace(1,win_x_prot.size + 1, (((win_x_prot.size - win) + 1) // 5)),win_x_prot[0:(win_x_prot.size - win):5])
  plt.show()

stem_prot(prion)

win_19_prion = read_window_avg(h_score(prion), 19)[0] 
plt.stem(np.linspace(1,win_19_prion.size + 1, 47),win_19_prion[0:234:5])
plt.show()

win_3_prion = read_window_avg(h_score(prion), 3)[0] 
plt.plot(np.arange(1,win_3_prion.size + 1),win_3_prion, np.arange(1,h_score(prion).size +1), np.arange(1,h_score(prion).size +1)*0, "r--")
plt.show()

read_window_avg(h_score(prion), 3)[1]

plt.stem(np.linspace(1,win_3_prion.size + 1),win_3_prion[0:249:5])
plt.show()

win_15_prion = read_window_avg(h_score(prion), 15)[0] 
plt.plot(np.arange(1,win_15_prion.size + 1),win_15_prion,np.arange(1,h_score(prion).size +1), np.arange(1,h_score(prion).size +1)*0, "r--")
plt.show()

read_window_avg(h_score(prion), 15)[1]

plt.stem(np.linspace(1,win_15_prion.size + 1,48),win_15_prion[0:239:5])
plt.show()